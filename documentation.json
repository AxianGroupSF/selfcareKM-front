{
    "pipes": [],
    "interfaces": [
        {
            "name": "Breadcrumb",
            "id": "interface-Breadcrumb-4d99cbf8aa9f2531c264539552ef3954bfa4f204e28440f5b1f9e82f429e1cc7b2af1bbf3868b99e07e373cccb07be8cc2a1ec223e742edc69b8574d5e34f82f",
            "file": "src/app/components/shared/models/breadcrumb.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Breadcrumb {\n  path: string;\n  label: string;\n  icon?: string;\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DataNotif",
            "id": "interface-DataNotif-6a1a134647714018e7aa86f691bdab7ccf11eafaa0cc919ffd24e8609beb2a17309b8cf908adbb85ba2c2fec306bff5b4683586079df3f9c85e9eaa2193452d7",
            "file": "src/app/components/shared/models/notification.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StatusIcon {\n  status: string;\n  icon: string;\n}\nexport interface DataNotif {\n  title?: string;\n  message: string;\n  status?: 'default' | 'info' | 'success' | 'warning' | 'danger';\n  buttonLabelLeft?: string;\n  buttonLabelRight?: string;\n  bg?: boolean;\n  icon?: boolean;\n  iconSpec?: string;\n  closeButton?: boolean;\n  borderNotif?: boolean;\n  type?: 'notification' | 'toast';\n}\n",
            "properties": [
                {
                    "name": "bg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "borderNotif",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "buttonLabelLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "buttonLabelRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "closeButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "iconSpec",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"notification\" | \"toast\"",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DateMarge",
            "id": "interface-DateMarge-867e10cd9569f19717ac120263af1b82416eeab6db2d23b2bc4174e651096b926cda4e12f6068227acfbd38a2185d496401ae150b864a1d364ad75965b58278a",
            "file": "src/app/components/shared/models/allfields.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DateMarge {\n  min?: string | null;\n  max?: string | null;\n}\n",
            "properties": [
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DefaultButton",
            "id": "interface-DefaultButton-7ba6402711abe954e58a1b1fb3c9223ddfcc0ff05442f83a30eea899a446e7ac815a4a7d158a8b6496f4d0e8d60ee2f68086e2536cdf2302d9b8cb8bc93b816f",
            "file": "src/app/components/shared/models/default-button.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DefaultButton {\n  label?: string;\n  size?: 'sm' | 'md';\n  aspect?: 'default' | 'outline' | 'unborder1' | 'unborder2' | 'unborder3';\n  icon?: boolean;\n  doubleIcon?: boolean;\n  fontIcon?: string;\n  fontIcon2?: string;\n  iconPosition?: 'left' | 'right';\n  disable?: boolean;\n}\n",
            "properties": [
                {
                    "name": "aspect",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"default\" | \"outline\" | \"unborder1\" | \"unborder2\" | \"unborder3\"",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "disable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "doubleIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "fontIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "fontIcon2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "iconPosition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"right\"",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\"",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "StatusIcon",
            "id": "interface-StatusIcon-6a1a134647714018e7aa86f691bdab7ccf11eafaa0cc919ffd24e8609beb2a17309b8cf908adbb85ba2c2fec306bff5b4683586079df3f9c85e9eaa2193452d7",
            "file": "src/app/components/shared/models/notification.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StatusIcon {\n  status: string;\n  icon: string;\n}\nexport interface DataNotif {\n  title?: string;\n  message: string;\n  status?: 'default' | 'info' | 'success' | 'warning' | 'danger';\n  buttonLabelLeft?: string;\n  buttonLabelRight?: string;\n  bg?: boolean;\n  icon?: boolean;\n  iconSpec?: string;\n  closeButton?: boolean;\n  borderNotif?: boolean;\n  type?: 'notification' | 'toast';\n}\n",
            "properties": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-5ab2fed73ffe2d3ba35da84ff97227f6ceb30e65bdaa3e4bca83043fa2130d35ea9f77cdb4716537befc57d95e4fb7c25d66d018167cb001e0e64969b7f2bc11",
            "file": "src/app/components/core/services/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAuth",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAuth",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  getAuth(): string {\n    return localStorage.getItem('authorization') ?? '';\n  }\n  setAuth(token: string) {\n    localStorage.setItem('authorization', token);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "BreadcrumbService",
            "id": "injectable-BreadcrumbService-88846e3b06f40a99f6f1431c108162bed1f9f0d0af649eeb5aee440f8e3da20f2e0799408911bb98a0798e61ae6b74fe50ea5de4017229ace8203dc9014c0e3c",
            "file": "src/app/components/shared/services/breadcrumb.service.ts",
            "properties": [
                {
                    "name": "breadcrumbs$",
                    "defaultValue": "new BehaviorSubject<Breadcrumb[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "goto$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "addBreadcrumb",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "parentUrl",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "breadcrumbs",
                            "type": "Breadcrumb[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "parentUrl",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "breadcrumbs",
                            "type": "Breadcrumb[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLabel",
                    "args": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Data",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from '@angular/core';\nimport { BehaviorSubject, filter } from 'rxjs';\nimport { Breadcrumb } from '../models/breadcrumb';\nimport {\n  ActivatedRouteSnapshot,\n  Data,\n  NavigationEnd,\n  Router,\n} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbService {\n  goto$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  breadcrumbs$ = new BehaviorSubject<Breadcrumb[]>([]);\n  router = inject(Router);\n  constructor() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event) => {\n        const root = this.router.routerState.snapshot.root;\n        const breadcrumbs: Breadcrumb[] = [];\n        this.addBreadcrumb(root, [], breadcrumbs);\n        this.breadcrumbs$.next(breadcrumbs);\n      });\n  }\n  private addBreadcrumb(\n    route: ActivatedRouteSnapshot | null,\n    parentUrl: string[],\n    breadcrumbs: Breadcrumb[],\n  ) {\n    if (route) {\n      const routeUrl = parentUrl.concat(route.url.map((url) => url.path));\n\n      if (route.data['breadcrumb']) {\n        const breadcrumb = {\n          label: this.getLabel(route.data),\n          url: '/' + routeUrl.join('/'),\n        };\n        breadcrumbs.push(breadcrumb);\n      }\n      this.addBreadcrumb(route.firstChild, routeUrl, breadcrumbs);\n    }\n  }\n\n  private getLabel(data: Data) {\n    return typeof data['breadcrumb'] === 'function'\n      ? data['breadcrumb'](data)\n      : data['breadcrumb'];\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "HttpRequestService",
            "id": "injectable-HttpRequestService-2d4932d5b0659f53d443c2ea1054a8ef7efbe8bca56304537559ae7fa88e0c1f1e95945b261908e37302bc8ede7d813b68037e3d7ccbfc8a17e87dd4040c1043",
            "file": "src/app/components/core/services/http-request.service.ts",
            "properties": [
                {
                    "name": "host",
                    "defaultValue": "environment.host",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "partPath",
                    "defaultValue": "'api'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "head",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "options",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "patch",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../../environments/environment.development';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpRequestService {\n  host: string = environment.host;\n  partPath: string = 'api';\n\n  constructor(private http: HttpClient) {}\n\n  public post<T>(url: string, body: any): Observable<T> {\n    return this.http.post<T>(`${this.host}/${this.partPath}/${url}`, body);\n  }\n\n  public get<T>(url: string): Observable<T> {\n    return this.http.get<T>(`${this.host}/${this.partPath}/${url}`);\n  }\n\n  public put<T>(url: string, body: any): Observable<T> {\n    return this.http.put<T>(`${this.host}/${this.partPath}/${url}`, body);\n  }\n\n  public delete<T>(url: string): Observable<T> {\n    return this.http.delete<T>(`${this.host}/${this.partPath}/${url}`);\n  }\n\n  public patch<T>(url: string, body: any): Observable<T> {\n    return this.http.patch<T>(`${this.host}/${this.partPath}/${url}`, body);\n  }\n\n  public head<T>(url: string): Observable<T> {\n    return this.http.head<T>(`${this.host}/${this.partPath}/${url}`);\n  }\n\n  public options<T>(url: string): Observable<T> {\n    return this.http.options<T>(`${this.host}/${this.partPath}/${url}`);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AllfieldsComponent",
            "id": "component-AllfieldsComponent-448d7bbefa9ab643ff90aa997c389098d96da9fc47156bc62cd22a898c5b98c6c9f7a449acd050b6535a28eab3230da014710831333b2fc686a3518e294163f7",
            "file": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideMomentDateAdapter(MY_FORMATS)"
                },
                {
                    "name": "{ provide: MAT_DATE_LOCALE, useValue:  }"
                }
            ],
            "selector": "app-allfields",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./allfields.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocomplite",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 117,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "checkAll",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dateMarge",
                    "defaultValue": "<DateMarge>{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 89,
                    "type": "DateMarge",
                    "decorators": []
                },
                {
                    "name": "defaultTime",
                    "defaultValue": "'11:11 PM'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fieldError",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 124,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "filterDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "formatTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "\"24\" | \"12\"",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "'icn-cube'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconSelect",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "list",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "listDisable",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "listItem",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "listValue",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "multipleSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "nameField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "nameFieldEnd",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "nameFieldStart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 86,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "parentForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "FormGroup",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "refRadio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "defaultValue": "8",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "\"default\" | \"md\" | \"sm\"",
                    "decorators": []
                },
                {
                    "name": "textError",
                    "defaultValue": "'Text error'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 125,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textLable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "typeField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "\"date\" | \"dateRange\" | \"time\" | \"switchButton\" | \"checkbox\" | \"textInput\" | \"radio\" | \"textarea\" | \"select\" | \"selectMultiple\"",
                    "decorators": []
                },
                {
                    "name": "valueRadio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionField",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "EventEmitter<any>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "cd",
                    "defaultValue": "inject(ChangeDetectorRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                },
                {
                    "name": "renderer",
                    "defaultValue": "inject(Renderer2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "valueTime",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgxMatTimepickerFormatType",
                    "optional": false,
                    "description": "",
                    "line": 91
                }
            ],
            "methodsClass": [
                {
                    "name": "checkForm",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isDisabled",
                    "args": [
                        {
                            "name": "option",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 153,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 143,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatDatepickerModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "NgxMatTimepickerModule",
                    "type": "module"
                },
                {
                    "name": "NgSelectModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Renderer2,\n  inject,\n} from '@angular/core';\nimport { FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { provideMomentDateAdapter } from '@angular/material-moment-adapter';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport * as _moment from 'moment';\nimport 'moment/locale/fr';\nimport { default as _rollupMoment } from 'moment';\nimport { DateMarge } from '../../../models/allfields';\nimport {\n  NgxMatTimepickerFormatType,\n  NgxMatTimepickerModule,\n} from 'ngx-mat-timepicker';\nimport { CommonModule } from '@angular/common';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nconst moment = _rollupMoment || _moment;\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\nmoment.updateLocale('fr', {\n  weekdaysMin: ['Dim', 'Lun', 'Mar', 'Mer', 'Jeu', 'Ven', 'Sam'],\n});\n\n@Component({\n  selector: 'app-allfields',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDatepickerModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxMatTimepickerModule,\n    NgSelectModule,\n  ],\n  providers: [\n    provideMomentDateAdapter(MY_FORMATS),\n    { provide: MAT_DATE_LOCALE, useValue: 'fr' },\n  ],\n  templateUrl: './allfields.component.html',\n  styleUrl: './allfields.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AllfieldsComponent {\n  @Input() parentForm!: FormGroup;\n  @Input() typeField!:\n    | 'date'\n    | 'dateRange'\n    | 'time'\n    | 'switchButton'\n    | 'checkbox'\n    | 'textInput'\n    | 'radio'\n    | 'textarea'\n    | 'select'\n    | 'selectMultiple';\n  @Input() nameField!: string;\n  @Input() textLable!: string;\n  @Input() placeholder: string = '';\n  @Input() disable: boolean = false;\n  //datepicker\n  @Input() nameFieldStart!: string;\n  @Input() nameFieldEnd!: string;\n  @Input() filterDate: any;\n  @Input() dateMarge: DateMarge = <DateMarge>{};\n  //time\n  valueTime: NgxMatTimepickerFormatType = 12;\n  cd = inject(ChangeDetectorRef);\n  @Input() set formatTime(value: 24 | 12) {\n    this.valueTime = value;\n    this.cd.detectChanges();\n  }\n  @Input() defaultTime: string = '11:11 PM';\n  // checkbox\n  @Input() checkAll: boolean = false;\n  @Input() size: 'default' | 'md' | 'sm' = 'default';\n  // radio\n  @Input() valueRadio!: string;\n  @Input() refRadio!: string;\n\n  // text input\n  @Input() icon: string = 'icn-cube';\n\n  // textarea\n  @Input() rows: number = 8;\n\n  // Select\n  @Input() list: any;\n  @Input() listItem: string = '';\n  @Input() listValue: string = '';\n  @Input() listDisable: string = '';\n  @Input() multipleSelect: boolean = false;\n  @Input() autocomplite: boolean = false;\n  @Input() iconSelect: string = '';\n\n  //action\n  @Output() actionField: EventEmitter<any> = new EventEmitter<any>();\n\n  // error\n  @Input() fieldError: boolean = false;\n  @Input() textError: string = 'Text error';\n\n  renderer = inject(Renderer2);\n\n  checkForm(event: any) {\n    this.actionField.emit(event);\n  }\n  onFocus(event: FocusEvent) {\n    const el = event.target as HTMLInputElement;\n    if (el) {\n      this.renderer.addClass(el.closest('.textField'), 'textField--fieldActif');\n      this.renderer.setStyle(\n        el.closest('.textField'),\n        'border-color',\n        '#272727',\n      );\n    }\n  }\n  onBlur(event: Event) {\n    const el = event.target as HTMLInputElement;\n    this.renderer.setStyle(el.closest('.textField'), 'border-color', '#e4e4e4');\n    if (el && el.value === '') {\n      this.renderer.removeClass(\n        el.closest('.textField'),\n        'textField--fieldActif',\n      );\n    }\n  }\n  isDisabled(option: any): boolean {\n    return option.disabled;\n  }\n}\n",
            "styleUrl": "./allfields.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "formatTime": {
                    "name": "formatTime",
                    "setSignature": {
                        "name": "formatTime",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "\"24\" | \"12\"",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 93,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "\"24\" | \"12\"",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "@if (parentForm) {\n  <span class=\"cntForm\" [formGroup]=\"parentForm\">\n    @switch (typeField) {\n      @case (\"date\") {\n        <mat-form-field\n          class=\"cntdatepicker\"\n          (click)=\"dateBox.open()\"\n          onkeypress=\"\"\n        >\n          <mat-label>{{ textLable }}</mat-label>\n          <input\n            matInput\n            readonly\n            [matDatepicker]=\"dateBox\"\n            [matDatepickerFilter]=\"filterDate\"\n            [formControlName]=\"nameField\"\n            (ngModelChange)=\"checkForm($event)\"\n            [min]=\"dateMarge.min\"\n            [max]=\"dateMarge.max\"\n            style=\"cursor: pointer\"\n          />\n          <mat-datepicker-toggle matIconSuffix [for]=\"dateBox\">\n          </mat-datepicker-toggle>\n          <mat-datepicker #dateBox></mat-datepicker>\n        </mat-form-field>\n      }\n      @case (\"dateRange\") {\n        <mat-form-field\n          class=\"cntdatepicker\"\n          (click)=\"dateBoxRange.open()\"\n          onkeypress=\"\"\n        >\n          <mat-label>{{ textLable }}</mat-label>\n          <mat-date-range-input [rangePicker]=\"dateBoxRange\">\n            <input\n              matStartDate\n              readonly\n              [formControlName]=\"nameFieldStart\"\n              (ngModelChange)=\"checkForm($event)\"\n              style=\"cursor: pointer\"\n            />\n            <input\n              matEndDate\n              readonly\n              [formControlName]=\"nameFieldEnd\"\n              (ngModelChange)=\"checkForm($event)\"\n              style=\"cursor: pointer\"\n            />\n          </mat-date-range-input>\n          <mat-datepicker-toggle\n            matIconSuffix\n            [for]=\"dateBoxRange\"\n          ></mat-datepicker-toggle>\n          <mat-date-range-picker #dateBoxRange></mat-date-range-picker>\n        </mat-form-field>\n      }\n      @case (\"time\") {\n        <ngx-mat-timepicker-field\n          [format]=\"valueTime\"\n          [defaultTime]=\"'11:11 PM'\"\n          (ngModelChange)=\"checkForm($event)\"\n          [formControlName]=\"nameField\"\n        ></ngx-mat-timepicker-field>\n      }\n      @case (\"switchButton\") {\n        <div class=\"switchField\">\n          <input\n            type=\"checkbox\"\n            hidden=\"hidden\"\n            [formControlName]=\"nameField\"\n            (ngModelChange)=\"checkForm($event)\"\n            [id]=\"nameField\"\n          />\n          <label [for]=\"nameField\" [attr.aria-label]=\"nameField\"></label>\n        </div>\n      }\n      @case (\"checkbox\") {\n        <div\n          class=\"checkboxField\"\n          [ngClass]=\"[\n            disable ? 'checkboxField--disable' : '',\n            checkAll ? 'checkboxField--checkAll' : '',\n            size ? 'checkboxField--' + size : ''\n          ]\"\n        >\n          <input\n            type=\"checkbox\"\n            [formControlName]=\"nameField\"\n            [id]=\"nameField\"\n            (ngModelChange)=\"checkForm($event)\"\n          />\n          @if (textLable) {\n            <label [for]=\"nameField\">{{ textLable }}</label>\n          }\n        </div>\n      }\n      @case (\"textInput\") {\n        <div\n          class=\"textField textField--input\"\n          [ngClass]=\"[\n            disable ? 'textField--disable' : '',\n            size ? 'textField--' + size : '',\n            fieldError ? 'textField--error' : ''\n          ]\"\n        >\n          <input\n            type=\"text\"\n            [formControlName]=\"nameField\"\n            [id]=\"nameField\"\n            (focus)=\"onFocus($event)\"\n            (blur)=\"onBlur($event)\"\n            (ngModelChange)=\"checkForm($event)\"\n            [placeholder]=\"placeholder\"\n          />\n          @if (textLable) {\n            <label [for]=\"nameField\">{{ textLable }}</label>\n          }\n          @if (icon) {\n            <i class=\"{{ icon }}\"></i>\n          }\n        </div>\n      }\n      @case (\"radio\") {\n        <div\n          class=\"radioField\"\n          [ngClass]=\"[\n            disable ? 'radioField--disable' : '',\n            size ? 'radioField--' + size : ''\n          ]\"\n        >\n          <input\n            type=\"radio\"\n            [id]=\"refRadio\"\n            [attr.name]=\"nameField\"\n            [formControlName]=\"nameField\"\n            [value]=\"valueRadio\"\n            (ngModelChange)=\"checkForm($event)\"\n          />\n          @if (textLable) {\n            <label [for]=\"refRadio\">{{ textLable }}</label>\n          }\n        </div>\n      }\n      @case (\"textarea\") {\n        <div\n          class=\"textField textField--textarea\"\n          [ngClass]=\"[\n            disable ? 'textField--disable' : '',\n            fieldError ? 'textField--error' : ''\n          ]\"\n        >\n          @if (textLable) {\n            <label [for]=\"nameField\">{{ textLable }}</label>\n          }\n          <textarea\n            [formControlName]=\"nameField\"\n            [id]=\"nameField\"\n            (focus)=\"onFocus($event)\"\n            (blur)=\"onBlur($event)\"\n            (ngModelChange)=\"checkForm($event)\"\n            [placeholder]=\"placeholder\"\n            [rows]=\"rows\"\n          >\n          </textarea>\n        </div>\n      }\n      @case (\"select\") {\n        <div class=\"selectField\">\n          <ng-select\n            [multiple]=\"multipleSelect\"\n            [closeOnSelect]=\"!multipleSelect\"\n            [searchable]=\"autocomplite\"\n            [placeholder]=\"placeholder\"\n            [formControlName]=\"nameField\"\n            [clearable]=\"multipleSelect\"\n            (change)=\"checkForm($event)\"\n          >\n            @for (item of list; track $index) {\n              <ng-option\n                [value]=\"item[listItem]\"\n                [disabled]=\"item[listDisable]\"\n              >\n                <span>{{ item[listValue] }}</span>\n                @if (iconSelect) {\n                  <i class=\"{{ item[iconSelect] }}\"></i>\n                }\n              </ng-option>\n            }\n          </ng-select>\n        </div>\n      }\n      @default {\n        No type.\n      }\n    }\n    @if (fieldError) {\n      <div class=\"fieldError\">{{ textError }}</div>\n    }\n  </span>\n}\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-efab9bce6f17e1a8e3ae66c88275386b8284fe0b21cdfd7ac9d97b63c8e7e84b25de1c6b5f557d5c5aceb61428e82d562f6ed2efd14b28518e1cd4f67a5d44fd",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'design-system'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "MainContentComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { MainContentComponent } from './components/main-content/main-content.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, MainContentComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  title = 'design-system';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-main-content></app-main-content>\n"
        },
        {
            "name": "AuthComponent",
            "id": "component-AuthComponent-6f068eb09c4c9ae952337b80fc27c13faa4edb7041dc6f609f45f80eb8416e0d7ed66b5056619e6e40e2397cbc92c95eaae282fba06d6f7b3c1ca0aa356274dc",
            "file": "src/app/components/core/auth/auth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-auth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./auth.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss'\n})\nexport class AuthComponent {\n\n}\n",
            "styleUrl": "./auth.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>auth works!</p>\n"
        },
        {
            "name": "BreadcrumbComponent",
            "id": "component-BreadcrumbComponent-fe5c1fd6a1015604a0653f44005b255cc690702b06ffb55774232dfdae02757a21851ba4c1843b9544577ed52a7f572a4a6062a3bb6e66fe2f9069af03494cee",
            "file": "src/app/components/shared/components/breadcrumb/breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "aspect",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"default\" | \"arrow2\" | \"arrow3\" | \"arrow4\"",
                    "decorators": []
                },
                {
                    "name": "bgColor",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "listNavigation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Breadcrumb[]",
                    "decorators": []
                },
                {
                    "name": "navMax",
                    "defaultValue": "4",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { Breadcrumb } from '../../models/breadcrumb';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-breadcrumb',\n  standalone: true,\n  imports: [CommonModule, RouterLink, RouterLinkActive],\n  templateUrl: './breadcrumb.component.html',\n  styleUrl: './breadcrumb.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent {\n  @Input() listNavigation!: Breadcrumb[];\n  @Input() navMax: number = 4;\n  @Input() aspect: 'default' | 'arrow2' | 'arrow3' | 'arrow4' = 'default';\n  @Input() bgColor: boolean = false;\n}\n",
            "styleUrl": "./breadcrumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@if (listNavigation) {\n  <nav\n    class=\"navbreadcrumb\"\n    [ngClass]=\"[\n      aspect ? 'navbreadcrumb--' + aspect : '',\n      bgColor ? 'navbreadcrumb--bg' : ''\n    ]\"\n  >\n    <ul>\n      @for (nav of listNavigation; track $index) {\n        @if ($first) {\n          <li>\n            @if (nav.icon) {\n              <i class=\"{{ nav.icon }}\"></i>\n            }\n            <a [routerLink]=\"[nav.path]\"> {{ nav.label }}</a>\n          </li>\n          @if ($count > navMax) {\n            <li>\n              <span class=\"navDotted\"></span>\n            </li>\n          }\n        }\n        @if (!($count - (navMax - 1) > $index && $count > navMax)) {\n          @if ($last) {\n            <li class=\"current\">\n              @if (nav.icon) {\n                <i class=\"{{ nav.icon }}\"></i>\n              }\n              <span> {{ nav.label }}</span>\n            </li>\n          } @else {\n            @if (!$first) {\n              <li>\n                @if (nav.icon) {\n                  <i class=\"{{ nav.icon }}\"></i>\n                }\n                <a [routerLink]=\"[nav.path]\"> {{ nav.label }}</a>\n              </li>\n            }\n          }\n        }\n      }\n    </ul>\n  </nav>\n}\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "DefaultButtonComponent",
            "id": "component-DefaultButtonComponent-4142b9ae0b8c105d1c0e875b2b3c38b544e8291ef02db5f3981e3fa2cf4a683f76943da52410cc759e7035e7b7f3b8cfb3b8f26f5b6bc3c2a347a1b44d0a004b",
            "file": "src/app/components/shared/components/default-button/default-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-default-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./default-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "aspect",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"default\" | \"outline\" | \"unborder1\" | \"unborder2\" | \"unborder3\"",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "DefaultButton",
                    "decorators": []
                },
                {
                    "name": "disable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "doubleIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fontIcon",
                    "defaultValue": "'icn-cube'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "fontIcon2",
                    "defaultValue": "'icn-cube'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconPosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"sm\" | \"md\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "action",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "actionButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { DefaultButton } from '../../models/default-button';\n\n@Component({\n  selector: 'app-default-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './default-button.component.html',\n  styleUrl: './default-button.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DefaultButtonComponent {\n  @Input() label!: string;\n  @Input() size?: 'sm' | 'md' = 'md';\n  @Input() aspect?:\n    | 'default'\n    | 'outline'\n    | 'unborder1'\n    | 'unborder2'\n    | 'unborder3' = 'default';\n  @Input() icon?: boolean = false;\n  @Input() doubleIcon?: boolean = false;\n  @Input() fontIcon?: string = 'icn-cube';\n  @Input() fontIcon2?: string = 'icn-cube';\n  @Input() iconPosition?: 'left' | 'right' = 'left';\n  @Input() disable: boolean = false;\n\n  @Input()\n  set data(listData: DefaultButton) {\n    const {\n      label,\n      size,\n      aspect,\n      icon,\n      fontIcon,\n      fontIcon2,\n      doubleIcon,\n      iconPosition,\n      disable,\n    } = listData;\n    this.label = label ?? this.label;\n    this.size = size ?? this.size;\n    this.aspect = aspect ?? this.aspect;\n    this.icon = icon ?? this.icon;\n    this.doubleIcon = doubleIcon ?? this.doubleIcon;\n    this.fontIcon = fontIcon ?? this.fontIcon;\n    this.fontIcon2 = fontIcon2 ?? this.fontIcon2;\n    this.iconPosition = iconPosition ?? this.iconPosition;\n    this.disable = disable ?? this.disable;\n  }\n\n  @Output() action = new EventEmitter<Event>();\n\n  actionButton() {\n    this.action.emit();\n  }\n}\n",
            "styleUrl": "./default-button.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "listData",
                                "type": "DefaultButton",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 36,
                        "jsdoctags": [
                            {
                                "name": "listData",
                                "type": "DefaultButton",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<button\n  class=\"btn\"\n  [ngClass]=\"[\n    aspect ? 'btn--' + aspect : '',\n    size ? 'btn--' + size : '',\n    icon ? 'btn--icn' + iconPosition : '',\n    disable ? 'btn--disable' : ''\n  ]\"\n  (click)=\"actionButton()\"\n  [disabled]=\"disable\"\n>\n  @if (icon) {\n    <i class=\"{{ fontIcon }}\"></i>\n  }\n  @if (label) {\n    {{ label }}\n  } @else {\n    <ng-content></ng-content>\n  }\n  @if (doubleIcon) {\n    <i class=\"{{ fontIcon2 }}\"></i>\n  }\n</button>\n"
        },
        {
            "name": "DesignSystemComponent",
            "id": "component-DesignSystemComponent-8f766fc7647bfee997895d5ecf9e14c6e622b2760ff7bb1ed509923f5f65aef92eaa442c30de3000fbb70758b6b3d98373556495f427379ac329871035b2036a",
            "file": "src/app/components/main-content/layout/pages/design-system/design-system.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-design-system",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./design-system.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "breadcrumb",
                    "defaultValue": "[\n    {\n      path: '',\n      label: 'Home',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link1',\n      label: 'Link 1',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link2',\n      label: 'Link 2',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link3',\n      label: 'Link 3',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link4',\n      label: 'Link 4',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link5',\n      label: 'Link 5',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link6',\n      label: 'Link 6',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link7',\n      label: 'Link 7',\n      icon: 'icn-home',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Breadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 272
                },
                {
                    "name": "breadcrumb2",
                    "defaultValue": "[\n    {\n      path: '',\n      label: 'Home',\n    },\n    {\n      path: 'link1',\n      label: 'Link 1',\n    },\n    {\n      path: 'link2',\n      label: 'Link 2',\n    },\n    {\n      path: 'link3',\n      label: 'Link 3',\n    },\n    {\n      path: 'link4',\n      label: 'Link 4',\n    },\n    {\n      path: 'link5',\n      label: 'Link 5',\n    },\n    {\n      path: 'link6',\n      label: 'Link 6',\n    },\n    {\n      path: 'link7',\n      label: 'Link 7',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Breadcrumb[]",
                    "optional": false,
                    "description": "",
                    "line": 314
                },
                {
                    "name": "buttonActions",
                    "defaultValue": "[\n    {\n      label: 'Button',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultButton[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "buttonActions2",
                    "defaultValue": "[\n    {\n      label: 'Button',\n      aspect: 'outline',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultButton[]",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "buttonActions3",
                    "defaultValue": "[\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultButton[]",
                    "optional": false,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "buttonActions4",
                    "defaultValue": "[\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultButton[]",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "buttonActions5",
                    "defaultValue": "[\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DefaultButton[]",
                    "optional": false,
                    "description": "",
                    "line": 221
                },
                {
                    "name": "changeformatTime",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"12\" | \"24\"",
                    "optional": false,
                    "description": "",
                    "line": 401
                },
                {
                    "name": "filterWeek",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 396
                },
                {
                    "name": "formDefault",
                    "defaultValue": "new FormGroup({\n    date: new FormControl(''),\n    dateStart: new FormControl(''),\n    dateEnd: new FormControl(''),\n    time: new FormControl(''),\n    formatTime: new FormControl(''),\n    chose: new FormControl(''),\n    chose1: new FormControl(''),\n    chose2: new FormControl(''),\n    chose3: new FormControl(''),\n    chose4: new FormControl(true),\n    chose5: new FormControl(true),\n    text: new FormControl(''),\n    choseRadio: new FormControl(''),\n    choseRadio2: new FormControl(''),\n    longText: new FormControl(' '),\n    choseSelect: new FormControl(),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 348
                },
                {
                    "name": "listSelect",
                    "defaultValue": "[\n    {\n      value: 'value1',\n      viewValue: 'Value 1',\n      disable: false,\n      icon: 'icn-cube',\n    },\n    {\n      value: 'value2',\n      viewValue: 'Value 2',\n      disable: false,\n      icon: 'icn-cube',\n    },\n    {\n      value: 'value3',\n      viewValue: 'Value 3',\n      disable: false,\n      icon: 'icn-cube',\n    },\n    {\n      value: 'value4',\n      viewValue: 'Value 4',\n      disable: true,\n      icon: 'icn-cube',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 366
                },
                {
                    "name": "notification",
                    "defaultValue": "{\n    message: 'test message',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DataNotif",
                    "optional": false,
                    "description": "",
                    "line": 392
                }
            ],
            "methodsClass": [
                {
                    "name": "changeFormatDate",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 409,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dateform",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 406,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 403,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DefaultButtonComponent",
                    "type": "component"
                },
                {
                    "name": "BreadcrumbComponent",
                    "type": "component"
                },
                {
                    "name": "AllfieldsComponent",
                    "type": "component"
                },
                {
                    "name": "NotificationComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { DefaultButtonComponent } from '../../../../shared/components/default-button/default-button.component';\nimport { DefaultButton } from '../../../../shared/models/default-button';\nimport { Breadcrumb } from '../../../../shared/models/breadcrumb';\nimport { BreadcrumbComponent } from '../../../../shared/components/breadcrumb/breadcrumb.component';\nimport { AllfieldsComponent } from '../../../../shared/components/forms/allfields/allfields.component';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NotificationComponent } from '../../../../shared/components/notification/notification.component';\nimport { DataNotif } from '../../../../shared/models/notification';\n\n@Component({\n  selector: 'app-design-system',\n  standalone: true,\n  imports: [\n    DefaultButtonComponent,\n    BreadcrumbComponent,\n    AllfieldsComponent,\n    NotificationComponent,\n  ],\n  templateUrl: './design-system.component.html',\n  styleUrl: './design-system.component.scss',\n})\nexport class DesignSystemComponent {\n  buttonActions: DefaultButton[] = [\n    {\n      label: 'Button',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ];\n  buttonActions2: DefaultButton[] = [\n    {\n      label: 'Button',\n      aspect: 'outline',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'outline',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ];\n  buttonActions3: DefaultButton[] = [\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder1',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ];\n  buttonActions4: DefaultButton[] = [\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder2',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ];\n  buttonActions5: DefaultButton[] = [\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      iconPosition: 'right',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n    },\n    {\n      label: '',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      size: 'sm',\n    },\n    {\n      label: 'Button',\n      aspect: 'unborder3',\n      icon: true,\n      fontIcon: 'icn-cube',\n      doubleIcon: true,\n      fontIcon2: 'icn-cube',\n      disable: true,\n    },\n  ];\n  breadcrumb: Breadcrumb[] = [\n    {\n      path: '',\n      label: 'Home',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link1',\n      label: 'Link 1',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link2',\n      label: 'Link 2',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link3',\n      label: 'Link 3',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link4',\n      label: 'Link 4',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link5',\n      label: 'Link 5',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link6',\n      label: 'Link 6',\n      icon: 'icn-home',\n    },\n    {\n      path: 'link7',\n      label: 'Link 7',\n      icon: 'icn-home',\n    },\n  ];\n  breadcrumb2: Breadcrumb[] = [\n    {\n      path: '',\n      label: 'Home',\n    },\n    {\n      path: 'link1',\n      label: 'Link 1',\n    },\n    {\n      path: 'link2',\n      label: 'Link 2',\n    },\n    {\n      path: 'link3',\n      label: 'Link 3',\n    },\n    {\n      path: 'link4',\n      label: 'Link 4',\n    },\n    {\n      path: 'link5',\n      label: 'Link 5',\n    },\n    {\n      path: 'link6',\n      label: 'Link 6',\n    },\n    {\n      path: 'link7',\n      label: 'Link 7',\n    },\n  ];\n  formDefault: FormGroup = new FormGroup({\n    date: new FormControl(''),\n    dateStart: new FormControl(''),\n    dateEnd: new FormControl(''),\n    time: new FormControl(''),\n    formatTime: new FormControl(''),\n    chose: new FormControl(''),\n    chose1: new FormControl(''),\n    chose2: new FormControl(''),\n    chose3: new FormControl(''),\n    chose4: new FormControl(true),\n    chose5: new FormControl(true),\n    text: new FormControl(''),\n    choseRadio: new FormControl(''),\n    choseRadio2: new FormControl(''),\n    longText: new FormControl(' '),\n    choseSelect: new FormControl(),\n  });\n  listSelect: any = [\n    {\n      value: 'value1',\n      viewValue: 'Value 1',\n      disable: false,\n      icon: 'icn-cube',\n    },\n    {\n      value: 'value2',\n      viewValue: 'Value 2',\n      disable: false,\n      icon: 'icn-cube',\n    },\n    {\n      value: 'value3',\n      viewValue: 'Value 3',\n      disable: false,\n      icon: 'icn-cube',\n    },\n    {\n      value: 'value4',\n      viewValue: 'Value 4',\n      disable: true,\n      icon: 'icn-cube',\n    },\n  ];\n  notification: DataNotif = {\n    message: 'test message',\n  };\n  // disable week-end\n  filterWeek = (d: Date | null): boolean => {\n    const date = d ? new Date(d) : new Date();\n    const day = date.getDay();\n    return day !== 0 && day !== 6;\n  };\n  changeformatTime: 12 | 24 = 12;\n\n  onAction() {\n    console.log('on click');\n  }\n  dateform(event: any) {\n    console.log('event==>', this.formDefault);\n  }\n  changeFormatDate(event: any) {\n    this.changeformatTime = event ? 24 : 12;\n  }\n}\n",
            "styleUrl": "./design-system.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1>Design System</h1>\n<div class=\"sectDesign\">\n  <h2>Button</h2>\n  <div class=\"listTypeBtn\">\n    <div class=\"listTypeBtn__item\">\n      <div class=\"listBtn\">\n        @for (buttonAction of buttonActions; track $index) {\n          <div class=\"listBtn__item\">\n            <app-default-button\n              [data]=\"buttonAction\"\n              (action)=\"onAction()\"\n            ></app-default-button>\n          </div>\n        }\n      </div>\n    </div>\n    <div class=\"listTypeBtn__item\">\n      <div class=\"listBtn\">\n        @for (buttonAction of buttonActions2; track $index) {\n          <div class=\"listBtn__item\">\n            <app-default-button\n              [data]=\"buttonAction\"\n              (action)=\"onAction()\"\n            ></app-default-button>\n          </div>\n        }\n      </div>\n    </div>\n    <div class=\"listTypeBtn__item\">\n      <div class=\"listBtn\">\n        @for (buttonAction of buttonActions3; track $index) {\n          <div class=\"listBtn__item\">\n            <app-default-button\n              [data]=\"buttonAction\"\n              (action)=\"onAction()\"\n            ></app-default-button>\n          </div>\n        }\n      </div>\n    </div>\n    <div class=\"listTypeBtn__item\">\n      @for (buttonAction of buttonActions4; track $index) {\n        <div class=\"listBtn__item\">\n          <app-default-button\n            [data]=\"buttonAction\"\n            (action)=\"onAction()\"\n          ></app-default-button>\n        </div>\n      }\n    </div>\n    <div class=\"listTypeBtn__item\">\n      @for (buttonAction of buttonActions5; track $index) {\n        <div class=\"listBtn__item\">\n          <app-default-button\n            [data]=\"buttonAction\"\n            (action)=\"onAction()\"\n          ></app-default-button>\n        </div>\n      }\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Breadcrumbs</h2>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-breadcrumb [listNavigation]=\"breadcrumb2\"></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [aspect]=\"'arrow2'\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [aspect]=\"'arrow3'\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [aspect]=\"'arrow4'\"\n          ></app-breadcrumb>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [aspect]=\"'arrow2'\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [aspect]=\"'arrow3'\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb2\"\n            [aspect]=\"'arrow4'\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-breadcrumb [listNavigation]=\"breadcrumb\"></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [aspect]=\"'arrow2'\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [aspect]=\"'arrow3'\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [aspect]=\"'arrow4'\"\n          ></app-breadcrumb>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [aspect]=\"'arrow2'\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [aspect]=\"'arrow3'\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-breadcrumb\n            [listNavigation]=\"breadcrumb\"\n            [aspect]=\"'arrow4'\"\n            [bgColor]=\"true\"\n          ></app-breadcrumb>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Datepicker</h2>\n  <div class=\"listCol listCol--col3\">\n    <div class=\"listCol__item\">\n      <h3>Datepicker simple</h3>\n      <app-allfields\n        typeField=\"date\"\n        [parentForm]=\"formDefault\"\n        nameField=\"date\"\n        textLable=\"Choose a date\"\n        (actionField)=\"dateform($event)\"\n      ></app-allfields>\n    </div>\n    <div class=\"listCol__item\">\n      <h3>Datepicker Double 1</h3>\n      <app-allfields\n        typeField=\"dateRange\"\n        [parentForm]=\"formDefault\"\n        nameFieldStart=\"dateStart\"\n        nameFieldEnd=\"dateEnd\"\n        textLable=\"Enter a date range\"\n        (actionField)=\"dateform($event)\"\n      ></app-allfields>\n    </div>\n    <div class=\"listCol__item\">\n      <h3>Datepicker Double 2</h3>\n      <app-allfields\n        typeField=\"date\"\n        [parentForm]=\"formDefault\"\n        nameField=\"dateStart\"\n        textLable=\"Date start\"\n        (actionField)=\"dateform($event)\"\n        [filterDate]=\"filterWeek\"\n      ></app-allfields>\n      au\n      <app-allfields\n        typeField=\"date\"\n        [parentForm]=\"formDefault\"\n        nameField=\"dateEnd\"\n        textLable=\"Date end\"\n        (actionField)=\"dateform($event)\"\n        [filterDate]=\"filterWeek\"\n      ></app-allfields>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Timepicker</h2>\n  <div class=\"cntFormat\">\n    <span>Format 24heures</span>\n    <app-allfields\n      typeField=\"switchButton\"\n      [parentForm]=\"formDefault\"\n      nameField=\"formatTime\"\n      [formatTime]=\"changeformatTime\"\n      (actionField)=\"changeFormatDate($event)\"\n    ></app-allfields>\n  </div>\n  <app-allfields\n    typeField=\"time\"\n    [parentForm]=\"formDefault\"\n    nameField=\"time\"\n    (actionField)=\"dateform($event)\"\n  ></app-allfields>\n</div>\n<div class=\"sectDesign\">\n  <h2>Checkbox</h2>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose1\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [size]=\"'sm'\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose1\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [disable]=\"true\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose4\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [disable]=\"true\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose2\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [checkAll]=\"true\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose3\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [size]=\"'sm'\"\n            [checkAll]=\"true\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose3\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [size]=\"'sm'\"\n            [checkAll]=\"true\"\n            [disable]=\"true\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"checkbox\"\n            [parentForm]=\"formDefault\"\n            nameField=\"chose5\"\n            textLable=\"One option\"\n            (actionField)=\"dateform($event)\"\n            [size]=\"'sm'\"\n            [checkAll]=\"true\"\n            [disable]=\"true\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Text Input</h2>\n  <div class=\"listCol listCol--col3\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            [fieldError]=\"true\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            [disable]=\"true\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            size=\"md\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            [fieldError]=\"true\"\n            size=\"md\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            [disable]=\"true\"\n            size=\"md\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            size=\"sm\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            [fieldError]=\"true\"\n            size=\"sm\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textInput\"\n            [parentForm]=\"formDefault\"\n            nameField=\"text\"\n            textLable=\"Label\"\n            [disable]=\"true\"\n            size=\"sm\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Radio</h2>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"radio\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseRadio\"\n            textLable=\"One option\"\n            valueRadio=\"chose 1\"\n            refRadio=\"chosen1\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"radio\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseRadio\"\n            textLable=\"One option\"\n            valueRadio=\"chose 2\"\n            refRadio=\"chosen2\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"radio\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseRadio\"\n            textLable=\"One option\"\n            valueRadio=\"chose 3\"\n            refRadio=\"chosen3\"\n            [disable]=\"true\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"radio\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseRadio2\"\n            textLable=\"One option\"\n            valueRadio=\"chose 1\"\n            refRadio=\"chosen4\"\n            size=\"sm\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"radio\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseRadio2\"\n            textLable=\"One option\"\n            valueRadio=\"chose 2\"\n            refRadio=\"chosen5\"\n            size=\"sm\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"radio\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseRadio2\"\n            textLable=\"One option\"\n            valueRadio=\"chose 3\"\n            refRadio=\"chosen6\"\n            [disable]=\"true\"\n            size=\"sm\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Textarea</h2>\n  <div class=\"listCol listCol--col3\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [fieldError]=\"true\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [disable]=\"true\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [rows]=\"3\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [fieldError]=\"true\"\n            [rows]=\"3\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [disable]=\"true\"\n            [rows]=\"3\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [rows]=\"2\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [fieldError]=\"true\"\n            [rows]=\"2\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"textarea\"\n            [parentForm]=\"formDefault\"\n            nameField=\"longText\"\n            textLable=\"Label\"\n            [disable]=\"true\"\n            [rows]=\"2\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Select</h2>\n  <div class=\"listCol listCol--col3\">\n    <div class=\"listCol__item\">\n      <h3>Default</h3>\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"select\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseSelect\"\n            placeholder=\"Sélectionner\"\n            [list]=\"listSelect\"\n            listItem=\"value\"\n            listValue=\"viewValue\"\n            listDisable=\"disable\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <h3>Multiselect</h3>\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"select\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseSelect\"\n            placeholder=\"Sélectionner\"\n            [list]=\"listSelect\"\n            listItem=\"value\"\n            listValue=\"viewValue\"\n            listDisable=\"disable\"\n            [multipleSelect]=\"true\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <h3>Icon select</h3>\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-allfields\n            typeField=\"select\"\n            [parentForm]=\"formDefault\"\n            nameField=\"choseSelect\"\n            placeholder=\"Sélectionner\"\n            [list]=\"listSelect\"\n            listItem=\"value\"\n            listValue=\"viewValue\"\n            listDisable=\"disable\"\n            iconSelect=\"icon\"\n            (actionField)=\"dateform($event)\"\n          ></app-allfields>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"sectDesign\">\n  <h2>Notification</h2>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-notification\n            title=\"Notification title\"\n            status=\"info\"\n            [borderNotif]=\"true\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            [borderNotif]=\"true\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification status=\"info\" [borderNotif]=\"true\" [icon]=\"true\">\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-notification\n            title=\"Notification title\"\n            status=\"info\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification status=\"info\" [icon]=\"true\">\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-notification\n            title=\"Notification title\"\n            status=\"info\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification status=\"info\">\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-notification\n            title=\"Notification title\"\n            status=\"info\"\n            [borderNotif]=\"true\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            [borderNotif]=\"true\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            [borderNotif]=\"true\"\n            [icon]=\"true\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n      </div>\n    </div>\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-notification\n            title=\"Notification title\"\n            status=\"info\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            [icon]=\"true\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification status=\"info\" [icon]=\"true\" [bg]=\"true\">\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"listCol\">\n    <div class=\"listCol__item\">\n      <div class=\"listBtn\">\n        <div class=\"listBtn__item\">\n          <app-notification\n            title=\"Notification title\"\n            status=\"info\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification\n            status=\"info\"\n            buttonLabelLeft=\"bouton\"\n            buttonLabelRight=\"bouton\"\n            [bg]=\"true\"\n          >\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n        <div class=\"listBtn__item\">\n          <app-notification status=\"info\" [bg]=\"true\">\n            This product is under active development and is available in a\n            Private Beta, please contact Courier support for\n            access.</app-notification\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n  <app-notification [data]=\"notification\"> </app-notification>\n</div>\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-8a60337cd99521c7582c2a72c84db07777cc4769e848fd04b47a2e0271da9c95164593ad36dab9db1ee343bdc5c1e938ce8fbb3c6d2d2aa468edd1d3aa2edf10",
            "file": "src/app/components/core/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<footer id=\"sectFooter\">\n  <div class=\"footerIntern\">\n    <div class=\"container\">\n      <div class=\"cntFooter mainColumn4\">\n        <div class=\"colFooter\">\n          <figure class=\"logoFooter\">\n            <img class=\"img-fluid\" src=\"assets/images/logo.svg\" alt=\"Logo\" />\n          </figure>\n          <div class=\"txtFooter\">\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n            Perspiciatis, ipsam vitae! Optio, esse a dolores ipsa laborum\n            repudiandae porro dolore quisquam, provident voluptatum rem.\n          </div>\n        </div>\n        <div class=\"colFooter\">\n          <div class=\"titleFooter\">Title 1</div>\n          <nav class=\"navFooter\">\n            <ul>\n              <li>\n                <a href=\"#\">Item 1</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 2</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 3</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 4</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 5</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div class=\"colFooter\">\n          <div class=\"titleFooter\">Title 2</div>\n          <nav class=\"navFooter\">\n            <ul>\n              <li>\n                <a href=\"#\">Item 1</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 2</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 3</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 4</a>\n              </li>\n              <li>\n                <a href=\"#\">Item 5</a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div class=\"colFooter\">\n          <div class=\"titleFooter\">Suivez-nous</div>\n          <div class=\"listLink\">\n            <div class=\"itemLink\">\n              <a href=\"#\"><i class=\"icn-facebook\"></i></a>\n            </div>\n            <div class=\"itemLink\">\n              <a href=\"#\"><i class=\"icn-linkedin\"></i></a>\n            </div>\n            <div class=\"itemLink\">\n              <a href=\"#\"><i class=\"icn-twitter\"></i></a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"footerCopyright\">\n    <div class=\"container\">\n      <div class=\"cntCopyright\">\n        <div class=\"itemCol\">\n          L'utilisation de ce site entraine l'acceptation des\n          <a href=\"#\" title=\"Conditions générales d'Utilisation\"\n            >Conditions générales d'utilisation</a\n          >\n          et des <a href=\"#\">Cookies</a>\n        </div>\n        <div class=\"itemCol\">\n          Designed and Developed with 🤍 by <a href=\"#\" title=\"Pulse\">PULSE</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-ea429257efc8f16e9016239209012b4ae0579d6a34eb7c8cdb32a2862d2b6719dd161e03651024af85256b6cc95d69802fa0b5d341fc932f1a2664b9de716146-1",
            "file": "src/app/components/core/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss',\n})\nexport class HeaderComponent {}\n",
            "styleUrl": "./header.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<header id=\"sectHeader\" class=\"sectHeader sectHeader--sticky\">\n  <div class=\"container\">\n    <div class=\"headerIntern\">\n      <div class=\"cntlogo\">\n        <a href=\"index.html\">\n          <img class=\"img-fluid\" src=\"assets/images/logo.svg\" alt=\"Logo\" />\n        </a>\n      </div>\n      <div class=\"boxNavIntern\">\n        <div class=\"btnBox\">\n          <div id=\"btnnav\">\n            <div class=\"btninter\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        </div>\n        <nav id=\"navigation\">\n          <div class=\"cntNavBox\">\n            <ul class=\"cntNav\">\n              <li\n                routerLinkActive=\"current\"\n                ariaCurrentWhenActive=\"page\"\n                [routerLinkActiveOptions]=\"{ exact: true }\"\n              >\n                <a href=\"#\" [routerLink]=\"['']\"> Accueil </a>\n              </li>\n              <li\n                routerLinkActive=\"current\"\n                ariaCurrentWhenActive=\"page\"\n                [routerLinkActiveOptions]=\"{ exact: true }\"\n              >\n                <a href=\"#\" [routerLink]=\"['local']\"> i18n </a>\n              </li>\n              <li\n                routerLinkActive=\"current\"\n                ariaCurrentWhenActive=\"page\"\n                [routerLinkActiveOptions]=\"{ exact: true }\"\n              >\n                <a href=\"#\" [routerLink]=\"['design-sytem']\"> Design Sytem </a>\n              </li>\n              <li>\n                <a href=\"#\"> Services </a>\n              </li>\n              <li>\n                <a href=\"#\"> Contacts </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  </div>\n</header>\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-9ce7e4621d96f48238495e31601629c90936964be9b38347549dfc535438a1ad141069910adfc6c8317918e4232f04150877bb86ff263d89b35fe0a1289f14e6",
            "file": "src/app/components/main-content/layout/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DefaultButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { DefaultButtonComponent } from '../../../../shared/components/default-button/default-button.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [DefaultButtonComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {}\n",
            "styleUrl": "./home.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<section class=\"setBanniere\">\n  <div class=\"listBanniere\">\n    <div class=\"itemBanniere\">\n      <div class=\"itemIntern\">\n        <div class=\"banniereTxt\">\n          <div class=\"container\">\n            <div class=\"cnttxtIntern\">\n              <h2>Lorem, ipsum dolor.</h2>\n              <p>\n                Lorem, ipsum dolor sit amet consectetur adipisicing elit.\n                Laudantium!\n              </p>\n              <a href=\"#\" class=\"btn\">En savoir +</a>\n            </div>\n          </div>\n        </div>\n        <figure>\n          <img\n            class=\"img-fluid\"\n            src=\"assets/images/placeholder-lite.png\"\n            alt=\"Banniere\"\n          />\n        </figure>\n      </div>\n    </div>\n  </div>\n</section>\n<div class=\"container\">\n  <section>\n    <h2 class=\"titleSection\">Primary brand</h2>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern primary1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 1</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern primary2\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 2</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern primary3\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 3</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern primary4\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 4</div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Neutrals / 100%</h2>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutrals1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Blanc 100%</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutrals2\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 1</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutrals3\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 2</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutrals4\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 3</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutrals5\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 4</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutrals6\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 5</div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Neutrals / 50%</h2>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutralsLight1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 1</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutralsLight2\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 2</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutralsLight3\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 3</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutralsLight4\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 4</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutralsLight5\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 5</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern neutralsLight6\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Gris 6</div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section>\n    <h2 class=\"titleSection\">Semantic</h2>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondary1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Info</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondary2\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Success</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondary3\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Warning</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondary4\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Danger</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondaryLight1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Info Light</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondaryLight2\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Success Light</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondaryLight3\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Warning Light</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern secondaryLight4\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Danger Light</div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Others</h2>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern others1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 1</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern others2\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 2</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern others3\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Color 3</div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section>\n    <h2 class=\"titleSection\">Text Color</h2>\n    <div class=\"listColor\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern txtcolor1\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">Default</div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section>\n    <h2 class=\"titleSection\">Shadow</h2>\n    <div class=\"listColor cntBoxshadow\">\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-xs\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">xl</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-sm\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">sm</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-md\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">md</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-lg\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">lg</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-xl\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">xl</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-2xl\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">2xl</div>\n        </div>\n      </div>\n      <div class=\"itemColor\">\n        <div class=\"itemIntern boxShadow-3xl\">\n          <div class=\"cntColor\">\n            <div class=\"colorIntern\"></div>\n          </div>\n          <div class=\"colortxt\">3xl</div>\n        </div>\n      </div>\n    </div>\n  </section>\n\n  <section>\n    <h2 class=\"titleSection\">Typography</h2>\n    <p>\n      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sequi adipisci\n      cumque qui ea debitis illo natus, quod magnam perferendis obcaecati\n      accusamus harum officiis tempora recusandae ducimus veniam architecto,\n      mollitia facere. Illo natus voluptatibus esse explicabo. Blanditiis\n      repudiandae nam dolor quaerat placeat veritatis quo ullam alias aliquid\n      eum quam voluptatibus fugiat possimus, dolore excepturi consectetur totam\n      vero perferendis sapiente quasi assumenda.\n    </p>\n    <p>\n      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Sequi adipisci\n      cumque qui ea debitis illo natus, quod magnam perferendis obcaecati\n      accusamus harum officiis tempora recusandae ducimus veniam architecto,\n      mollitia facere. Illo natus voluptatibus esse explicabo. Blanditiis\n      repudiandae nam dolor quaerat placeat veritatis quo ullam alias aliquid\n      eum quam voluptatibus fugiat possimus, dolore excepturi consectetur totam\n      vero perferendis sapiente quasi assumenda.\n    </p>\n    <div class=\"fontfamily1\">\n      <h3 class=\"titleSection\">Font-family 1</h3>\n      <p>a b c d e f g h i j k l m n o p q r s t u v w x y z</p>\n      <p>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>\n    </div>\n    <div class=\"fontfamily2\">\n      <h3 class=\"titleSection\">Font-family 2</h3>\n      <p>a b c d e f g h i j k l m n o p q r s t u v w x y z</p>\n      <p>A B C D E F G H I J K L M N O P Q R S T U V W X Y Z</p>\n    </div>\n    <h6 class=\"title1\">h1. Title heading</h6>\n    <h2 class=\"title2\">h2. Title heading</h2>\n    <h3 class=\"title3\">h3. Title heading</h3>\n    <h4 class=\"title4\">h4. Title heading</h4>\n    <h5 class=\"title5\">h5. Title heading</h5>\n    <h1 class=\"title6\">h6. Title heading</h1>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Column</h2>\n    <div class=\"mainColumn2\">\n      <div class=\"itemCol\">\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Assumenda,\n        reprehenderit nihil. Facere, quam expedita optio excepturi voluptatum\n        nobis commodi eligendi animi earum quos! Voluptates cum dolore, corrupti\n        sunt tenetur facere.\n      </div>\n      <div class=\"itemCol\">\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Assumenda,\n        reprehenderit nihil. Facere, quam expedita optio excepturi voluptatum\n        nobis commodi eligendi animi earum quos! Voluptates cum dolore, corrupti\n        sunt tenetur facere.\n      </div>\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Button list</h2>\n    <div class=\"mainColumn3\">\n      <div class=\"itemCol\">\n        <a href=\"#\" class=\"btn\">Button btn</a>\n      </div>\n      <div class=\"itemCol\">\n        <a href=\"#\" class=\"btn btn-custom\">Button btn-custom</a>\n      </div>\n      <div class=\"itemCol\">\n        <a href=\"#\" class=\"btn btn-lite\">Button btn-lite</a>\n      </div>\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">ScrollBar</h2>\n    <div class=\"testScroll-bar\">\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatibus, id\n      velit. Aspernatur, eveniet hic id deserunt veritatis provident.\n      Necessitatibus quaerat facere, totam laudantium numquam possimus tempore\n      vel ducimus non voluptate. Ex esse maxime, minus nisi non asperiores\n      repellendus saepe magnam quod vel totam rem accusamus! Nemo suscipit cum\n      magni nisi ratione voluptas autem quisquam dolores qui eos, maiores, nam\n      eligendi? Repudiandae in assumenda accusamus doloribus placeat reiciendis\n      explicabo dignissimos repellendus velit, id eligendi voluptatum itaque\n      iusto corporis, at quibusdam nam ipsa laudantium atque, eveniet dolore\n      pariatur veniam error sint. Magnam. Adipisci possimus velit temporibus.\n      Facere sunt blanditiis, voluptatibus non enim ea voluptatem ad magnam hic\n      nam a beatae eaque cupiditate ipsum explicabo inventore omnis temporibus\n      delectus similique impedit! Omnis, optio! Nisi voluptates nobis fugiat\n      quis, voluptas pariatur veniam molestias labore iure deserunt, rerum\n      quidem quaerat, atque eligendi. Delectus possimus odio quo accusantium\n      aspernatur repellendus debitis veniam. Voluptates, nam! Maxime, tempore?\n      Autem nulla reiciendis laudantium vitae vel praesentium soluta alias.\n      Sapiente, necessitatibus consequatur! Repellat, asperiores, dignissimos\n      odit commodi ullam provident numquam sint veritatis quos illo voluptatum\n      quidem consequuntur eius mollitia voluptatem. Rem animi beatae, sapiente\n      ex placeat ducimus? Quia fugiat nihil magni et enim ad nemo, perspiciatis\n      mollitia a, vel repellat consectetur repudiandae modi, ab suscipit\n      expedita eveniet? Vero, ducimus! Molestias! Quibusdam id reiciendis\n      officiis vero aperiam hic, qui neque commodi. Non blanditiis ipsa in\n      inventore dolor numquam pariatur iure, beatae unde quos eum magnam\n      molestiae odio reiciendis fugit temporibus tempora! Eius, illo mollitia\n      quod tempora quia natus beatae error perferendis est quasi ab hic expedita\n      dicta non tempore maxime, neque exercitationem officia magni commodi\n      similique necessitatibus esse? Placeat, necessitatibus ducimus. Molestiae\n      repellendus facere, sit, sint pariatur nostrum aspernatur deleniti esse\n      dicta optio maxime beatae mollitia magnam iusto quia quis voluptatibus\n      illum, veritatis accusantium fugiat. Quibusdam magnam incidunt omnis\n      dolore labore!\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">List</h2>\n    <div class=\"mainColumn3\">\n      <div class=\"itemCol\">\n        <ul>\n          <li>Lorem ipsum dolor sit amet.</li>\n          <li>Lorem ipsum dolor sit amet.</li>\n          <li>Lorem ipsum dolor sit amet.</li>\n          <li>Lorem ipsum dolor sit amet.</li>\n        </ul>\n      </div>\n      <div class=\"itemCol\">\n        <ol>\n          <li>Lorem ipsum dolor sit amet.</li>\n          <li>Lorem ipsum dolor sit amet.</li>\n          <li>Lorem ipsum dolor sit amet.</li>\n          <li>Lorem ipsum dolor sit amet.</li>\n        </ol>\n      </div>\n    </div>\n  </section>\n  <section>\n    <div class=\"mainColumn2\">\n      <div class=\"itemCol\">\n        <h2 class=\"titleSection\">Formatting</h2>\n        <p>\n          <strong>Bold : Lorem ipsum dolor sit amet consectetur.</strong>\n        </p>\n        <p>\n          <em>Italic : Lorem ipsum dolor sit amet consectetur.</em>\n        </p>\n        <p>Underline : <u>Lorem ipsum dolor sit amet consectetur.</u></p>\n        <p>Strikethrough : <s>Lorem ipsum dolor sit amet consectetur.</s></p>\n        <p>Link : <a href=\"#\">Lorem ipsum dolor sit amet consectetur.</a></p>\n        <p>Superscript : Lorem ipsum <sup>dolor sit amet consectetur.</sup></p>\n        <p>Subscript : Lorem ipsum <sub>dolor sit amet consectetur.</sub></p>\n      </div>\n      <div class=\"itemCol\">\n        <h2 class=\"titleSection\">Blockquote</h2>\n        <blockquote>\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Minus sequi\n          eius officia dolor explicabo, quam eum molestiae nihil, laborum vero,\n          aut est tempora harum molestias nulla alias aliquam? Mollitia,\n          quibusdam! Velit quod, iste repellendus consequuntur sit, excepturi\n          voluptatem recusandae ad quaerat, quidem dolor? Dolore vel cum facilis\n          veritatis dignissimos molestiae laudantium odio iure impedit, totam\n          maxime quam nobis dolorem quaerat! Placeat tempore at aspernatur\n          repellat laudantium, facilis illo ratione enim similique recusandae?\n          Animi, non incidunt, sapiente hic culpa aut quod dolorem mollitia\n          perferendis ipsa ipsam reiciendis provident nesciunt adipisci error.\n        </blockquote>\n      </div>\n    </div>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Table</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>Head 1</th>\n          <th>Head 2</th>\n          <th>Head 3</th>\n          <th>Head 4</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n        </tr>\n        <tr>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n        </tr>\n        <tr>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n        </tr>\n        <tr>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n        </tr>\n        <tr>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n        </tr>\n        <tr>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n          <td>Lorem ipsum dolor sit amet consectetur.</td>\n        </tr>\n      </tbody>\n    </table>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Formulaire</h2>\n    <form>\n      <div class=\"groupFields\">\n        <div class=\"itemField\">\n          <label>Last name</label>\n          <input type=\"text\" name=\"lastname\" class=\"controle-field\" required />\n        </div>\n        <div class=\"itemField\">\n          <label>First name</label>\n          <input type=\"text\" name=\"firstname\" class=\"controle-field\" required />\n        </div>\n      </div>\n      <div class=\"groupFields\">\n        <div class=\"itemField\">\n          <label>E-mail</label>\n          <input type=\"mail\" name=\"email\" class=\"controle-field\" required />\n        </div>\n        <div class=\"itemField\">\n          <label>Phone</label>\n          <input type=\"text\" name=\"tel\" class=\"controle-field\" />\n        </div>\n      </div>\n      <div class=\"groupFields\">\n        <div class=\"itemField\">\n          <label for=\"chose1\">Techno</label>\n          <div class=\"boxcheck\">\n            <input\n              id=\"chose1\"\n              type=\"checkbox\"\n              name=\"javascript\"\n              class=\"controle-field\"\n            />\n            <label for=\"chose1\">Javascript</label>\n          </div>\n          <div class=\"boxcheck\">\n            <input\n              id=\"chose2\"\n              type=\"checkbox\"\n              name=\"php\"\n              class=\"controle-field\"\n            />\n            <label for=\"chose2\">PHP</label>\n          </div>\n          <div class=\"boxcheck\">\n            <input\n              id=\"chose3\"\n              type=\"checkbox\"\n              name=\"css\"\n              class=\"controle-field\"\n            />\n            <label for=\"chose3\">CSS</label>\n          </div>\n        </div>\n        <div class=\"itemField\">\n          <label for=\"chose1\">Framework</label>\n          <div class=\"boxradio\">\n            <input\n              id=\"radio1\"\n              type=\"radio\"\n              name=\"framework\"\n              class=\"controle-field\"\n            />\n            <label for=\"radio1\">React JS</label>\n          </div>\n          <div class=\"boxradio\">\n            <input\n              id=\"radio2\"\n              type=\"radio\"\n              name=\"framework\"\n              class=\"controle-field\"\n            />\n            <label for=\"radio2\">Laravel</label>\n          </div>\n          <div class=\"boxradio\">\n            <input\n              id=\"radio3\"\n              type=\"radio\"\n              name=\"framework\"\n              class=\"controle-field\"\n            />\n            <label for=\"radio3\">Synfony</label>\n          </div>\n        </div>\n      </div>\n      <div class=\"groupFields\">\n        <div class=\"itemField\">\n          <div class=\"boxSelect\">\n            <select>\n              <option value=\"1\">Pure CSS Select</option>\n              <option value=\"2\">No JS</option>\n              <option value=\"3\">Nice!</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class=\"groupFields\">\n        <div class=\"itemField\">\n          <label>Message</label>\n          <textarea name=\"message\" rows=\"8\" class=\"controle-field\"></textarea>\n        </div>\n      </div>\n    </form>\n  </section>\n  <section>\n    <h2 class=\"titleSection\">Font-icon</h2>\n    <div class=\"mainColumn5 listrs\">\n      <div class=\"itemCol\">\n        <i class=\"icn-youtube\"></i>\n      </div>\n      <div class=\"itemCol\">\n        <i class=\"icn-facebook\"></i>\n      </div>\n      <div class=\"itemCol\">\n        <i class=\"icn-pinterest\"></i>\n      </div>\n      <div class=\"itemCol\">\n        <i class=\"icn-linkedin\"></i>\n      </div>\n      <div class=\"itemCol\">\n        <i class=\"icn-twitter\"></i>\n      </div>\n    </div>\n  </section>\n</div>\n<h2>Exemple</h2>\n<app-default-button\n  [disable]=\"false\"\n  [icon]=\"true\"\n  iconPosition=\"right\"\n></app-default-button>\n"
        },
        {
            "name": "InternationalizationComponent",
            "id": "component-InternationalizationComponent-1a9c7b7111be82182eaeb3227785576dcf7f6f6ed5b1909128f3c0dabf6f04768394dbd669b6b4cf7ce62f96e11abc66077adbfa2a238a920f97fd19d338fc2a",
            "file": "src/app/components/main-content/layout/pages/internationalization/internationalization.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-internationalization",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./internationalization.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "availableLanguages",
                    "defaultValue": "['fr', 'en']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125,
                        148
                    ]
                },
                {
                    "name": "translateService",
                    "defaultValue": "inject(TranslateService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "changeLang",
                    "args": [
                        {
                            "name": "lang",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lang",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TranslateModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, inject } from '@angular/core';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-internationalization',\n  standalone: true,\n  imports: [TranslateModule],\n  templateUrl: './internationalization.component.html',\n  styleUrl: './internationalization.component.scss',\n})\nexport class InternationalizationComponent implements OnInit {\n  private readonly translateService = inject(TranslateService);\n  public readonly availableLanguages = ['fr', 'en'];\n\n  ngOnInit(): void {\n    this.translateService.addLangs(this.availableLanguages);\n    this.translateService.get('title').subscribe(console.log);\n  }\n  changeLang(lang: any) {\n    this.translateService.use(lang.target.value);\n  }\n}\n",
            "styleUrl": "./internationalization.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<h2>{{ \"title\" | translate }}</h2>\n<select (change)=\"changeLang($event)\">\n  @for (lang of availableLanguages; track $index) {\n  <option [value]=\"lang\">{{ lang }}</option>\n  }\n</select>\n"
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-2738ed6aa7e7f7b1c9f88df35ffe9b7fd24c3c74962e0cf3917c69c8ee9e2b401f143a2dbfe78b6f3d6f17fa60e3a631344e220f7e37805c2f7b49376a694d9b",
            "file": "src/app/components/main-content/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { FooterComponent } from '../../core/components/footer/footer.component';\nimport { HeaderComponent } from '../../core/components/header/header.component';\n\n@Component({\n  selector: 'app-layout',\n  standalone: true,\n  imports: [RouterOutlet, HeaderComponent, FooterComponent],\n  templateUrl: './layout.component.html',\n  styleUrl: './layout.component.scss',\n})\nexport class LayoutComponent {}\n",
            "styleUrl": "./layout.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-header></app-header>\n<main id=\"mainWrapper\">\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</main>\n<app-footer></app-footer>\n"
        },
        {
            "name": "MainContentComponent",
            "id": "component-MainContentComponent-87d3aba039f3e28b4b31c142480728bd4921ca2e0ca69532ed3fd667d52f663a2d8ae526ac2ad303a438b14e423e203560fb0b0ae1ac97417b470d3be5aca976",
            "file": "src/app/components/main-content/main-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-content",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./main-content.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-main-content',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './main-content.component.html',\n  styleUrl: './main-content.component.scss',\n})\nexport class MainContentComponent {}\n",
            "styleUrl": "./main-content.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "NotificationComponent",
            "id": "component-NotificationComponent-f3ec76db0fd67103063a2e3b20c55ce616315050a6c94a2c4d9308dbd829d88ea3ff4dbb6dadf927f9c8be29ef5634e57be09ff786bc8431b0fbe04bd37dca60",
            "file": "src/app/components/shared/components/notification/notification.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-notification",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./notification.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bg",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "borderNotif",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "buttonLabelLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonLabelRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "closeButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "DataNotif",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "iconSpec",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "status",
                    "defaultValue": "'info'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "\"default\" | \"info\" | \"success\" | \"warning\" | \"danger\"",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'notification'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "\"notification\" | \"toast\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actionOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "listIcon",
                    "defaultValue": "[\n    {\n      status: 'info',\n      icon: 'icn-notif-info',\n    },\n    {\n      status: 'success',\n      icon: 'icn-notif-success',\n    },\n    {\n      status: 'warning',\n      icon: 'icn-notif-warning',\n    },\n    {\n      status: 'danger',\n      icon: 'icn-notif-refuse',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StatusIcon[]",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "onAccept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onOpen",
                    "args": [
                        {
                            "name": "action",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "DefaultButtonComponent",
                    "type": "component"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { DefaultButtonComponent } from '../default-button/default-button.component';\nimport { CommonModule } from '@angular/common';\nimport { DataNotif, StatusIcon } from '../../models/notification';\n\n@Component({\n  selector: 'app-notification',\n  standalone: true,\n  imports: [DefaultButtonComponent, CommonModule],\n  templateUrl: './notification.component.html',\n  styleUrl: './notification.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationComponent {\n  @Input() title!: string;\n  @Input() message!: string;\n  @Input() status: 'default' | 'info' | 'success' | 'warning' | 'danger' =\n    'info';\n  @Input() buttonLabelLeft!: string;\n  @Input() buttonLabelRight!: string;\n  @Input() bg: boolean = false;\n  @Input() icon: boolean = false;\n  @Input() iconSpec!: string;\n  @Input() closeButton: boolean = true;\n  @Input() borderNotif: boolean = false;\n  @Input() type: 'notification' | 'toast' = 'notification';\n  @Input()\n  set data(listData: DataNotif) {\n    const {\n      title,\n      message,\n      status,\n      buttonLabelLeft,\n      buttonLabelRight,\n      bg,\n      icon,\n      iconSpec,\n      closeButton,\n      borderNotif,\n      type,\n    } = listData;\n    this.title = title ?? this.title;\n    this.message = message ?? this.message;\n    this.status = status ?? this.status;\n    this.buttonLabelLeft = buttonLabelLeft ?? this.buttonLabelLeft;\n    this.buttonLabelRight = buttonLabelRight ?? this.buttonLabelRight;\n    this.bg = bg ?? this.bg;\n    this.icon = icon ?? this.icon;\n    this.iconSpec = iconSpec ?? this.iconSpec;\n    this.closeButton = closeButton ?? this.closeButton;\n    this.borderNotif = borderNotif ?? this.borderNotif;\n    this.type = type ?? this.type;\n  }\n  actionOpen: boolean = false;\n  listIcon: StatusIcon[] = [\n    {\n      status: 'info',\n      icon: 'icn-notif-info',\n    },\n    {\n      status: 'success',\n      icon: 'icn-notif-success',\n    },\n    {\n      status: 'warning',\n      icon: 'icn-notif-warning',\n    },\n    {\n      status: 'danger',\n      icon: 'icn-notif-refuse',\n    },\n  ];\n\n  onOpen(action: boolean) {\n    this.actionOpen = action;\n    console.log('close notif', action);\n  }\n  onAccept() {\n    console.log('accept');\n  }\n}\n",
            "styleUrl": "./notification.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "data": {
                    "name": "data",
                    "setSignature": {
                        "name": "data",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "listData",
                                "type": "DataNotif",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 28,
                        "jsdoctags": [
                            {
                                "name": "listData",
                                "type": "DataNotif",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div\n  class=\"cntNotification\"\n  [ngClass]=\"[\n    status ? 'cntNotification--' + status : '',\n    status && bg ? 'cntNotification--' + status + '--bg' : '',\n    borderNotif ? 'cntNotification--border' : ''\n  ]\"\n>\n  @if (icon) {\n    <div class=\"cntNotification__icn\">\n      @if (iconSpec) {\n        <i class=\"{{ iconSpec }}\"></i>\n      } @else {\n        @for (iconItem of listIcon; track $index) {\n          @if (iconItem.status === status) {\n            <i class=\"{{ iconItem.icon }}\"></i>\n          }\n        }\n      }\n    </div>\n  }\n  <div class=\"cntNotification__body\">\n    @if (title) {\n      <div class=\"cntNotification__title\">{{ title }}</div>\n    }\n    <div class=\"cntNotification__content\">\n      @if (message) {\n        {{ message }}\n      } @else {\n        <ng-content></ng-content>\n      }\n    </div>\n    @if (buttonLabelLeft || buttonLabelRight) {\n      <div class=\"cntNotification__btn\">\n        <div class=\"listbtn\">\n          @if (buttonLabelLeft) {\n            <div class=\"listbtn__item\">\n              <app-default-button\n                aspect=\"outline\"\n                (action)=\"onOpen(!actionOpen)\"\n                >{{ buttonLabelLeft }}</app-default-button\n              >\n            </div>\n          }\n          @if (buttonLabelRight) {\n            <div class=\"listbtn__item\">\n              <app-default-button (action)=\"onAccept()\">{{\n                buttonLabelRight\n              }}</app-default-button>\n            </div>\n          }\n        </div>\n      </div>\n    }\n  </div>\n  @if (closeButton) {\n    <div\n      class=\"cntNotification__close\"\n      (click)=\"onOpen(!actionOpen)\"\n      (keypress)=\"onOpen(!actionOpen)\"\n    ></div>\n  }\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideRouter(routes), provideClientHydration(), provideAnimationsAsync()]\n}"
            },
            {
                "name": "authGuard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/core/guards/auth.guard.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CanActivateFn",
                "defaultValue": "(route, state) => {\n  return true;\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.development.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  host: 'https://emergency-backpreprod.axian-group.com:8081',\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  host: 'http://localhost:8080',\n}"
            },
            {
                "name": "httpRequestInterceptor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/core/interceptors/http-request.interceptor.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "HttpInterceptorFn",
                "defaultValue": "(req, next) => {\n  let requestHeaders: HttpHeaders = new HttpHeaders();\n  const authService = inject(AuthService);\n\n  if (authService.getAuth()) {\n    requestHeaders = new HttpHeaders({\n      'Access-Control-Allow-Headers': '*',\n      'Content-Type': 'application/json',\n      token: authService.getAuth(),\n    });\n  }\n  let modifiedReq = req.clone({\n    headers: requestHeaders,\n  });\n\n  return next(modifiedReq).pipe(\n    catchError((err) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          console.error('Unauthorized request:', err);\n        } else {\n          console.error('HTTP error:', err);\n        }\n      } else {\n        console.error('An error occurred:', err);\n      }\n      return throwError(() => err);\n    })\n  );\n}"
            },
            {
                "name": "moment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "_rollupMoment || _moment"
            },
            {
                "name": "MY_FORMATS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideRouter(routes), provideClientHydration(), provideAnimationsAsync()]\n}"
                }
            ],
            "src/app/components/core/guards/auth.guard.ts": [
                {
                    "name": "authGuard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/core/guards/auth.guard.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CanActivateFn",
                    "defaultValue": "(route, state) => {\n  return true;\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
                }
            ],
            "src/environments/environment.development.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.development.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  host: 'https://emergency-backpreprod.axian-group.com:8081',\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  host: 'http://localhost:8080',\n}"
                }
            ],
            "src/app/components/core/interceptors/http-request.interceptor.ts": [
                {
                    "name": "httpRequestInterceptor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/core/interceptors/http-request.interceptor.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HttpInterceptorFn",
                    "defaultValue": "(req, next) => {\n  let requestHeaders: HttpHeaders = new HttpHeaders();\n  const authService = inject(AuthService);\n\n  if (authService.getAuth()) {\n    requestHeaders = new HttpHeaders({\n      'Access-Control-Allow-Headers': '*',\n      'Content-Type': 'application/json',\n      token: authService.getAuth(),\n    });\n  }\n  let modifiedReq = req.clone({\n    headers: requestHeaders,\n  });\n\n  return next(modifiedReq).pipe(\n    catchError((err) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          console.error('Unauthorized request:', err);\n        } else {\n          console.error('HTTP error:', err);\n        }\n      } else {\n        console.error('An error occurred:', err);\n      }\n      return throwError(() => err);\n    })\n  );\n}"
                }
            ],
            "src/app/components/shared/components/forms/allfields/allfields.component.ts": [
                {
                    "name": "moment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "_rollupMoment || _moment"
                },
                {
                    "name": "MY_FORMATS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/auth/auth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AuthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/guards/auth.guard.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/interceptors/http-request.interceptor.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "httpRequestInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/core/services/http-request.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HttpRequestService",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main-content/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main-content/layout/pages/design-system/design-system.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DesignSystemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main-content/layout/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main-content/layout/pages/internationalization/internationalization.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InternationalizationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main-content/main-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/components/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/components/default-button/default-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DefaultButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AllfieldsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "moment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/components/forms/allfields/allfields.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MY_FORMATS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/components/notification/notification.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/models/allfields.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DateMarge",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/models/breadcrumb.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Breadcrumb",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/models/default-button.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DefaultButton",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/models/notification.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataNotif",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/models/notification.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StatusIcon",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/services/breadcrumb.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BreadcrumbService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.development.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}